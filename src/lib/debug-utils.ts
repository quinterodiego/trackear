// Utilidades para depuraci√≥n y validaci√≥n
export function validateGoogleSheetsConfig() {
  const requiredEnvVars = [
    'GOOGLE_SERVICE_ACCOUNT_JSON',
    'GOOGLE_SHEET_ID',
    'NEXTAUTH_SECRET',
    'GOOGLE_CLIENT_ID',
    'GOOGLE_CLIENT_SECRET'
  ];

  const missing = requiredEnvVars.filter(envVar => !process.env[envVar]);
  
  if (missing.length > 0) {
    console.error('‚ùå Variables de entorno faltantes:', missing);
    return false;
  }

  try {
    JSON.parse(process.env.GOOGLE_SERVICE_ACCOUNT_JSON!);
    console.log('‚úÖ GOOGLE_SERVICE_ACCOUNT_JSON es v√°lido');
  } catch (error) {
    console.error('‚ùå GOOGLE_SERVICE_ACCOUNT_JSON no es un JSON v√°lido');
    return false;
  }

  console.log('‚úÖ Todas las variables de entorno est√°n configuradas');
  return true;
}

export function logSheetOperation(operation: string, sheetName: string, data?: Record<string, unknown>) {
  if (process.env.NODE_ENV === 'development') {
    console.log(`üìä Google Sheets: ${operation} en hoja "${sheetName}"`, data ? { data } : '');
  }
}

export function handleSheetError(error: Record<string, unknown>, operation: string) {
  console.error(`‚ùå Error en Google Sheets (${operation}):`, error.message);
  
  if (error.code === 403) {
    console.error('üí° Posible soluci√≥n: Verifica permisos de la service account');
  }
  
  if (error.code === 404) {
    console.error('üí° Posible soluci√≥n: Verifica GOOGLE_SHEET_ID y nombres de hojas');
  }
  
  if (typeof error.message === 'string' && error.message.includes('Unable to parse range')) {
    console.error('üí° Posible soluci√≥n: Verifica nombres exactos de hojas: "Users", "Courses", "Classes"');
  }
}
